app MemeIpsumGenerator {
  wasp: {
    version: "^0.12.3"
  },
  title: "MemeIpsumGenerator",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id         Int         @id @default(autoincrement())
    characters Character[]
    messages   Message[]
    texts      Text[]
    quotas     Quota[]
psl=}

entity Character {=psl
    id        Int       @id @default(autoincrement())
    name      String
    imagePath String
    user      User      @relation(fields: [userId], references: [id])
    userId    Int
    Message   Message[]
psl=}

entity Message {=psl
    id          Int       @id @default(autoincrement())
    content     String
    character   Character @relation(fields: [characterId], references: [id])
    characterId Int
    user        User      @relation(fields: [userId], references: [id])
    userId      Int
psl=}

entity Text {=psl
    id      Int    @id @default(autoincrement())
    content String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
psl=}

entity Quota {=psl
    id      Int    @id @default(autoincrement())
    content String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
psl=}

action createCharacter {
  fn: import { createCharacter } from "@src/actions.js",
  entities: [User, Character]
}

action createMessage {
  fn: import { createMessage } from "@src/actions.js",
  entities: [User, Message, Character]
}

action createText {
  fn: import { createText } from "@src/actions.js",
  entities: [User, Text]
}

action createQuota {
  fn: import { createQuota } from "@src/actions.js",
  entities: [User, Quota]
}

query getCharacters {
  fn: import { getCharacters } from "@src/queries.js",
  entities: [User, Character]
}

query getMessages {
  fn: import { getMessages } from "@src/queries.js",
  entities: [User, Message]
}

query getTexts {
  fn: import { getTexts } from "@src/queries.js",
  entities: [User, Text]
}

query getQuotas {
  fn: import { getQuotas } from "@src/queries.js",
  entities: [User, Quota]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}